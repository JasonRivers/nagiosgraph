nagiosgraph Installation
------------------------

File:    $Id: INSTALL,v 1.19 2007/06/18 08:19:21 sf-hlai Stab $
Author:  (c) Soren Dossing, 2005
License: OSI Artistic License
         http://www.opensource.org/licenses/artistic-license.php

Follow instructions below to install and use nagiosgraph. They are 
mainly for Nagios 2.9, and might differ in other versions of
Nagios.

 - Check required packaged are installed: perl, CGI, nagios and rrdtool

 - Install nagiosgraph.conf, map, insert.pl and show.cgi somewhere, for
   example in /usr/local/nagios/nagiosgraph/

 - Edit paths, debug level etc. in nagiosgraph.conf.

 - Check that nagios user can write to "rrddir" (location defined in 
   nagiosgraph.conf), and www user can read.

 - Check that nagios and www users can write to "logfile" (location 
   defined in nagiosgraph.conf).

 - In insert.pl and show.cgi, update the line "my $configfile = '...' to
   point to the full path of nagiosgraph.conf file.


NOTE: Two ways to define data processing -- the new style and the old style.

[ Define data processing -- new style -- begin]
In new style, all performance data append to a file,
then, nagios invokes insert.pl at a regular interval to update rrd files.

 - [New Style] In nagios.cfg set:

     process_performance_data=1
     service_perfdata_file=/var/spool/nagios/perfdata.log
     service_perfdata_file_template=$LASTSERVICECHECK$||$HOSTNAME$||$SERVICEDESC$||$SERVICEOUTPUT$||$SERVICEPERFDATA$
     service_perfdata_file_mode=a
     service_perfdata_file_processing_interval=30
     service_perfdata_file_processing_command=process-service-perfdata

   Make sure that service_perfdata_command is either commented out 
   or not defined.

   Make sure that location of service_perfdata_file matches that of perflog
   defined in nagiosgraph.conf.

 - [New Style] In checkcommands.cfg or misccommands.cfg, depending on which 
   defined in nagios.cfg:

     define command {
       command_name  process-service-perfdata
       command_line  /usr/local/nagios/nagiosgraph/insert.pl
     }

   Make sure there is only one definition for process-service-perfdata.

   Some installations of Nagios (with embedded perl) requires to specify
   location of perl. Modify command_line to:

     command_line /usr/bin/perl /etc/nagios/nagiosgraph/insert.pl

[ Define data processing -- new style -- end]

[ Define data processing -- old style -- begin]
The old style uses more CPU. Here nagios invokes insert.pl to update rrd files
immediately for every service check.

 - [Old Style] In nagios.cfg:

     process_performance_data=1
     service_perfdata_command=process-service-perfdata

   Make sure that service_perfdata_file_processing_command is either
   commented out or not defined.

 - [Old Style] In checkcommands.cfg or misccommands.cfg, depending on which 
   defined in nagios.cfg:

     define command{
       command_name  process-service-perfdata
       command_line  /usr/local/nagios/nagiosgraph/insert.pl "$LASTSERVICECHECK$||$HOSTNAME$||$SERVICEDESC$||$SERVICEOUTPUT$||$SERVICEPERFDATA$"
     }

   Some installations of Nagios (with embedded perl) requires to specify
   location of perl. Modify command_line to:

     command_line /usr/bin/perl /etc/nagios/nagiosgraph/insert.pl "$LASTSERVICECHECK$||$HOSTNAME$||$SERVICEDESC$||$SERVICEOUTPUT$||$SERVICEPERFDATA$"

[ Define data processing -- old style -- end]

 - Put an icon approx. 40x40 in .../share/images/logos/graph.gif for nagios to link
   to graphs.

 - Copy nagiosgraph.css to .../nagios/stylesheets/ .

NOTE: Next step was used in some earlier version of Nagios.
For Nagios version 2.6 and later, this step does nothing.
Nagios seems to ignore it.  For Nagios version 2.6 and later,
skip this step.
 - In cgi.cfg have:

     xedtemplate_config_file=/usr/local/etc/nagios/serviceextinfo.cfg

 - For Nagios version 2.6 and later.
     Note: This may also be what is required for earlier versions of Nagios.
     It is uncertain as when Nagios started handling extended services differently.

     If you have these lines in nagios.cfg, then this step is what you need to do
     instead of the one above.

     # Extended host/service info definitions are now stored along with
     # other object definitions:
     # cfg_file=/etc/nagios/hostextinfo.cfg
     # cfg_file=/etc/nagios/serviceextinfo.cfg

     Un-comment the 2 cfg_file= lines.
     [NOTE: hostextinfo.cfg not required for Nagios 2.9]

 - Edit or create hostextinfo.cfg [NOTE: For Nagios 2.9, skip this step.]

     define hostextinfo {
       host_name  your-host
     }

     This must be the host you will use in serviceextinfo.cfg

 - Edit serviceextinfo.cfg

   Most services can be graphed with no particular configuration like this:

     define serviceextinfo {
       service_description  DNS
       hostgroup       servers
       notes_url       /nagiosgraph/show.cgi?host=$HOSTNAME$&service=$SERVICEDESC$
       icon_image      graph.gif
       icon_image_alt  View graphs
     }

 -- Instead of hostgroup line a host_name line with all hosts where this
    type of data are being collected.

 -- For Nagios 2.9, delete or comment out the two lines of icon_image 
    and icon_image_alt. And, replace nagios/images/notes.gif with your own
    40x40 gif file.

 -- Some type of services have data values that have big differences in the
    magnitude. In such cases it's good idea to split up into seperate
    graphs. Here's an example for ntp:

     define serviceextinfo {
       service_description  NTP
       host_name       server01,server02,server03,server04
       notes_url       /nagiosgraph/show.cgi?host=$HOSTNAME$&service=$SERVICEDESC$&db=ntp,jitter,offset&db=ntp,stratum
       icon_image      graph.gif
       icon_image_alt  View graphs
     }

 -- Add geom option (e.g. &geom=350x100) to notes_url line for custom sizes of
    graphs.

 -- Add rrdopts option (e.g. &rrdopts=%2Dl%200%20%2Du%20100 (meaning:
   "-l 0 -u 100")) to notes_url line for custom Y axis ranges. Any
   rrdgraph options can be specified, but has to be url encoded.

 -- Add &fixedscale to set the Y-axis to be in the same units as the
   supplied perf data. Will also set the legends to be in same units


 - Configure Apache to point to show.cgi. For example:

     ScriptAlias /nagiosgraph/ /usr/local/nagios/nagiosgraph/

 - To add new service types, edit the map file. This contains regular
   expression to identify service types, and defines how to store data in
   rrd files. Use testentry.pl for testing before inserting in map file.

   You can also run the nagios check command from the command line to see
   what is returned.

   NOTE: The current entry in map file for HTTP does not work for Fedora core 6
   with Nagios 2.6 and later.  This is what did work.

	# Service type: unix-www
	#   ouput:OK - HTTP/1.1 302 Found - 0.002 second response time |time=0.001920s;;;0.000000 size=126B;;;0
	/output:.*?HTTP.*?([.0-9]+) sec/
	and push @s, [ http,
		[ rt, GAUGE, $1 ] ];

 - Consider security.

 - Restart Nagios. Increase debug level in nagiosgraph.conf if things don't
   work right away.

 - Keep an eye on the log file. It can grow big. Perhaps rotate it, or
   decrease log level when everything works fine.
