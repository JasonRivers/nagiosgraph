#!/usr/bin/perl ## no critic (RequireVersionVar)

# File:    $Id$
# This program is based upon show.cgi
# Author:  (c) Soren Dossing, 2004
# License: OSI Artistic License
#          http://www.opensource.org/licenses/artistic-license.php
# Author:  (c) Robert Teeter, 2005
# Author:  (c) Alan Brenner, Ithaka Harbors, 2008

# The configuration file and ngshared.pm must be in this directory.
use lib '/etc/nagios/nagiosgraph';
# The configuration loader will look for nagiosgraph.conf in this directory.
# So take note upgraders, there is no $configfile = '....' line anymore.

# Main program - change nothing below

use ngshared qw(:SHOWHOST);

use CGI;
use English qw(-no_match_vars);
use File::Find;
use strict;
use warnings;

my ($params,                    # Required hostname to show data for
    @style,                     # CSS, if so configured
    $hdb,                       # array ref of service to list for the host
    @svrlist,
    $title,                     # boolean for when to print the labels
    $cgi,
    $url
);

$cgi = new CGI;
$cgi->autoEscape(0);
readconfig('read');
if (defined $Config{ngshared}) {
    debug(1, $Config{ngshared});
    htmlerror($cgi, $Config{ngshared});
    exit;
}
# Expect host input
$params = getparams($cgi, 'showhost', ['host', ]);
dumper(DBDEB, 'params', $params);
if (not defined $params->{host} or not $params->{host}) {
    htmlerror(trans('nohostgiven'), 1);
    exit;
}
getdebug('showhost', $params->{host}, q()); # See if we have custom debug level
if ($Config{stylesheet}) { @style = (-style => {-src => "$Config{stylesheet}"}); }

# Draw a page
find(\&getgraphlist, $Config{rrddir});
@svrlist = sort keys %Navmenu;
dumper(DBDEB, 'srvlist', \@svrlist);
print printheader($cgi, {title => $params->{host}, style => \@style,
    call => 'host', svrlist => \@svrlist, default => $params->{host},
    label => $cgi->a({href => "$Config{nagioscgiurl}/extinfo.cgi?type=1&host=$params->{host}"},
            $params->{host})}) or
    debug(DBCRT, "error sending HTML to web server: $OS_ERROR");

$hdb = readdb('hostdb', $params->{host});
if (exists $Config{graphlabels} and not exists $Config{nolabels}) {
    $title = 1;
} else {
    $title = 0;
}
foreach my $period (graphsizes($Config{timehost})) {
    dumper(DBDEB, 'period', $period);
    print $cgi->h2(trans($period->[0])) or
        debug(DBCRT, "error sending HTML to web server: $OS_ERROR");
    foreach my $dbinfo (@{$hdb}) {
        debug(DBDEB, "service $dbinfo->{service}");
        if (defined $Config{rrdopts}{$params->{service}}) {
            $dbinfo->{rrdopts} = $Config{rrdopts}{$params->{service}};
        } else {
            $dbinfo->{rrdopts} = $params->{rrdopts};
        }
        $dbinfo->{host} = $params->{host};
        $dbinfo->{geom} = $params->{geom};
        $dbinfo->{fixedscale} = $params->{fixedscale};
        $dbinfo->{offset} = 0;
        $url = $Config{nagioscgiurl} .
            '/showservice.cgi?service=' . $dbinfo->{service} .
            join('&db=' . @{$dbinfo->{db}});
        $url =~ tr/ /+/;
        print $cgi->h2($cgi->a({href => $url}, defined $dbinfo->{label} ?
                $dbinfo->{label} : $dbinfo->{service})) . "\n" .
                printgraphlinks($cgi, $dbinfo, $period). "\n" or
            debug(DBCRT, "error sending HTML to web server: $OS_ERROR");
        if (not $title) {
            print printlabels(getlabels($dbinfo->{service}, $dbinfo->{db})) or
                debug(DBCRT, "error sending HTML to web server: $OS_ERROR");
        }
    }
}

print printfooter($cgi) or
    debug(DBCRT, "error sending HTML to web server: $OS_ERROR");

__END__

=head1 NAME

showhost.cgi - Graph Nagios data for a given host

=head1 DESCRIPTION

Run this via a web server cgi to generate an HTML page of data stored by
insert.pl. The showgraph.cgi script generates the graphs themselves.

=head1 USAGE

B<showhost.cgi>

=head1 CONFIGURATION

=head1 REQUIRED ARGUMENTS

=head1 OPTIONS

=head1 EXIT STATUS

=head1 DIAGNOSTICS

=head1 DEPENDENCIES

=over 4

=item B<Nagios>

While this could probably run without Nagios, as long as RRD databases exist,
it is intended to work along side Nagios.

=item B<showgraph.cgi>

This generates the graphs shown in the HTML generated here.

=back

=head1 INSTALLATION

Copy this file into Nagios' cgi directory (for the Apache web server, see where
the ScriptAlias for /nagios/cgi-bin points), and make sure it is executable by
the web server.

Install the B<ngshared.pm> file and edit this file to change the B<use lib> line
(line 11) to point to the directory containing B<ngshared.pm>.

Create or edit the example B<hostdb.conf>, which must reside in the same
directory as B<ngshared.pm>.

To link a web page generated by this script from Nagios, add

=over 4

action_url https://server/nagios/cgi-bin/showhost.cgi?host=host1

=back

to the B<define host> (Nagios 3) or B<define hostextinfo> (Nagios 2.12) stanza
(changing the base URL and host1 as needed).

Copy the images/action.gif file to the nagios/images directory, if desired.

=head1 INCOMPATIBILITIES

=head1 BUGS AND LIMITATIONS

Undoubtedly there are some in here. I (Alan Brenner) have endevored to keep this
simple and tested.

=head1 SEE ALSO

B<hostdb.conf> B<nagiosgraph.conf> B<showservice.cgi> B<ngshared.pm>

=head1 AUTHOR

Soren Dossing, the original author of show.cgi in 2004.

Robert Teeter, the original author of showhost.cgi in 2005

Alan Brenner - alan.brenner@ithaka.org; I've updated this from the version
at http://nagiosgraph.wiki.sourceforge.net/ by moving some subroutines into a
shared file (ngshared.pm), using showgraph.cgi, and adding links for show.cgi
and showservice.cgi.

=head1 LICENSE AND COPYRIGHT

Copyright (C) 2005 Soren Dossing, 2008 Ithaka Harbors, Inc.

This program is free software; you can redistribute it and/or modify it under
the terms of the OSI Artistic License see:
http://www.opensource.org/licenses/artistic-license-2.0.php

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.