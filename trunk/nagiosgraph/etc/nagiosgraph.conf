# nagiosgraph configuration file
#
# $Id$
# License: OSI Artistic License
#          http://www.opensource.org/licenses/artistic-license.php
# Author:  (c) 2005 Soren Dossing
# Author:  (c) 2008 Alan Brenner, Ithaka Harbors
# Author:  (c) 2010 Matthew Wall

# Location of nagiosgraph log file.  Debug output ends up here.
logfile = /var/log/nagiosgraph.log

# Optionally keep logging from CGI scripts in a separate file.
#cgilogfile = /var/log/nagiosgraph-cgi.log

# Location of nagios performance data log file. Comment out if not used.
perflog = /var/nagios/perfdata.log

# Directory to store rrd database files
rrddir = /var/nagiosgraph/rrd

# File containing regular expressions to identify service and perf data
mapfile = /etc/nagiosgraph/map

# File containing labels for services and data (optional)
#labelfile = /etc/nagiosgraph/labels.conf

# Location of showhost control file (optional)
#hostdb = /etc/nagiosgraph/hostdb.conf

# Location of showservice control file (optional)
#servdb = /etc/nagiosgraph/servdb.conf

# Location of showgroup control file (required for showgroup.cgi)
groupdb = /etc/nagiosgraph/groupdb.conf

# File containing data sets that should be selected in queries (optional)
#datasetdb = /etc/nagiosgraph/datasetdb.conf

# Nagiosgraph CGI URL.
nagiosgraphcgiurl = /nagiosgraph/cgi-bin

# Nagios CGI URL.  If the Nagiosgraph CGI scripts are in a directory other
# than the Nagios CGI directory, then specify the Nagios CGI URL here.
#nagioscgiurl = /nagios/cgi-bin

# JavaScript: URL to the nagiosgraph javascript file.
javascript = /nagiosgraph/nagiosgraph.js

# Stylesheet: URL to the nagiosgraph stylesheet.
stylesheet = /nagiosgraph/nagiosgraph.css


# Logging can be enabled for a specific CGI script and/or specific hosts or
# services.  When level is set to 5, the logs will see a lot of extra output,
# so be sure to reset the level when you have finished debugging.

# Debug levels
# 0 = None
# 1 = Critical
# 2 = Error
# 3 = Warn
# 4 = Info
# 5 = Debug
debug = 3

### log level for specific scripts
# log level for insert.pl
#debug_insert = 5
# if this is set to a hostname, then only log for this host
#debug_insert_host = host1
# if this is set to a service, then only log for this service
#debug_insert_service = PLW
# *_host and *_service together for a specific service on a specific host.
# log level for show.cgi
#debug_show = 5
#debug_show_host = host1
#debug_show_service = ping
# log level for showhost.cgi
#debug_showhost = 5
#debug_showhost_host = host1
#debug_showhost_service = ping
# log level for showservice.cgi
#debug_showservice = 5
#debug_showservice_host = host1
#debug_showservice_service = ping
# log level for showgroup.cgi
#debug_showgroup = 5
#debug_showgroup = host1
#debug_showgroup_service = ping
# log level for showgraph.cgi
#debug_showgraph = 5
#debug_showgraph_host = host1
#debug_showgraph_service = ping
# log level for testcolor.cgi
#debug_testcolor = 5

# graph sizes
geometries = 650x50,800x100,1000x200,2000x100

# default graph size (optional)
#default_geometry = 600x100

# Color scheme for graphs.  There are 8 pre-defined schemes (1-8) and one
# custom scheme (9).  Use testcolor.cgi to see what the color schemes
# look like and how they apply to specific service and data set names.
colorscheme = 1

# Custom color scheme is defined by a comma-separated list of RGB hex colors.
# rainbow: reddish, orange, yellow, green, light blue, dark blue, purple, grey
colors = D05050,D08050,D0D050,50D050,50D0D0,5050D0,D050D0,505050
# light/dark pairs: blue, green, purple, orange
#colors = 90d080,30a030,90c0e0,304090,ffc0ff,a050a0,ffc060,c07020
# green from light to dark
#colors = 80d080,50a050,308030

# Default line style (LINE1, LINE2, LINE3, AREA, TICK); see rrdgraph_graph
plotas = LINE2

# Line styles for specific data sets.  Comma-separated list of data source
# names.  Any source with a name assigned to plotasX will get line style X.
plotasLINE1 = avg5min,avg15min
plotasLINE2 = 
plotasLINE3 =
plotasAREA =
plotasTICK = 

# Specify line formats per data source (ds-name,linestyle,color).  For example,
# this plots every data source called 'crit' as a thin red line:
#lineformat = crit,LINE1,D05050
lineformat = warn,LINE1,D0D050;crit,LINE1,D05050;losswarn,LINE1,D0D050;losscrit,LINE1,D05050;rtawarn,LINE1,D0D050;rtacrit,LINE1,D05050

# Graphs to show in host-service page (day, week, month, quarter, year)
timeall = day,week,month,year
# Graphs to show in host page
timehost = day,week,month
# Graphs to show in service page
timeservice = day,week
# Graphs to show in a group page
timegroup = day,week

# Time periods that should default to expanded state.  If not specified here,
# the period will default to a collapsed state.
expand_timeall = day,week,month,year
expand_timehost = week
expand_timeservice = week
expand_timegroup = day

# Formats for time and date.
timeformat_now = '%H:%M:%S %d %b %Y %Z'
timeformat_day = '%H:%M %e %b'
timeformat_week = '%e %b'
timeformat_month = 'week %U'
timeformat_quarter = 'week %U'
timeformat_year = '%b %Y'

# Set this to refresh the web page.  Value is number of seconds.
#refresh = 300

# Uncomment this to hide the nagiosgraph title (useful when nagiosgraph is
# embedded in the nagios frame).
#hidengtitle = true

# Uncomment to show in the footer the time spent generating the page.
#showprocessingtime = true

# Set this to display a title for each graph in html.  When appropriate, the
# title also includes links to other views of each host and/or service.
showtitle = true

# Set this to display a description for each graph in html.  The description
# is typically a list of the data sets.
#showdesc = true

# Set this to put a title in each graph.
#showgraphtitle = true

# Set this to hide the legend in each graph.
#hidelegend = true

# Set this to display only the graph data - no axes, grid, or legend
#graphonly = true

# These list services that should follow the maximum or minimum value returned,
# instead of the average. The values must match the service_description values
# in the Nagios configuration.
maximums = Current Load,PLW,Procs: total,Procs: zombie,User Count
minimums = APCUPSD,Mem: free,Mem: swap

# These list services that should have additional data saved and graphed.
# For services listed here, graphs that contain averages (e.g. weekly, monthly)
# will include maximum/minimum values as well.
withmaximums = PING
withminimums = PING

# Data sets whose value should be negated.  Comma-separated list of names.
#negate = byte-received,drop-received,error-received,multi-received,packet-received

# This lists data that need to go into separate rrd files.  This is used
# when creating new rrd files when a change to the map is not possible.
# Use this to segregate a value that differs greatly from other returned values
# for a specific host (separating for all hosts should be done in the map).
# Each entry consists of a comma separated set of host,service,value.  Separate
# each set with a semicolon.
#hostservvar = server1,service1,val1;server2,service2,val2
#hostservvar = host2,PLW,smtp_error

# Scaling parameters, see the rrdgraph documentation for use
# Separate multiple services to add the -A option to by commas
#altautoscale = service1,service2
# Separate multiple services to add the -J option to by semicolons, and use a
# command to separate the service name from the desired value
#altautoscalemin = service1,min1;service2,min2
# Separate multiple services to add the -M option to by semicolons, and use a
# command to separate the service name from the desired value
#altautoscalemax = service1,max1;service2,max2
# Separate multiple services to add the -N option to by commas
#nogridfit = service1,service2
# Separate multiple services to add the -o option to by commas
#logarithmic = service1,service2

# Specify rrd graph options that apply to all graphs
#rrdopts=--border 0 --color BACK#ffffff

# Optional - define rrdopts override file, this enables you to specify
# particular rrdgraph options against each service.
#rrdoptsfile=/etc/nagiosgraph/rrdopts.conf

# If perfloop is set, insert.pl will loop waiting for input data. Otherwise it
# expects to be run by Nagios for every data event.
#perfloop = 1

# The heartbeat, stepsize, and resolution are rrdtool parameters.  They are
# used when RRD files are created.  Changes to these values have no effect
# on existing RRD files.  See the rrdtool documentation for details.
# (warning: do not modify unless you know what you are doing)

# RRD heartbeat. In seconds, twice the size of servicecheck intervals.
#heartbeat = 600

# RRD step size.  300 seconds is the rrdtool default.
#stepsize = 300

# RRD resolution controls the number of data values and thus RRD file size.
#resolution = 600 700 775 797
#resolution = 17280 17520 32850 1095

# Organization of rrd files
# _ = single character separator for all files in same dir
# subdir = files in subdirectory structure with "___" separator
dbseparator = subdir

# Type of the user access control database, comment out to allow all
# users to have access to every host. The database will be put in the
# rrddir directory defined above. See the utils/authz.pl file in the
# Nagiosgraph distribution for details on setting up the authorization.
#dbfile = DB_FILE

# Optionally force the language.  If no language is specified, the language
# is determined from the browser environment or explicit cgi argument.  The
# possible values are standard language/country codes such as es, fr, de,
# en_US, en_UK, ...  If there is no corresponding language file, the language
# reverts to english.
#language = es
